# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
    branches: [ "CI" ]
  pull_request:
    branches: [ "main" ]
    branches: [ "CI" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps TCP port 5430 on service container to the host
          - 5430:5430
    env:
      DATABASE_URL_DEV: postgresql://postgres:postgres@localhost:5430/todo-app-dev
      NODE_ENV: development
      PORT: 3333
      APP_JWT_SECRET: zKXHe-Ahdb7aPK1ylAJlRgTefktEaACi

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
      # run the migration in the test database
    - run: npm run db:migrate-dev
    #- run: npm run db:seed
    - run: npm install
    - run: npm run test