# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Checks CI

on:
  push:
    branches:
    - deploy
  pull_request:
    branches:
    - deploy

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version: [20.10.0]
        postgres-version: [14]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_DB: ${{ vars.DB_DATABASE }}
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_PASSWORD: ${{ vars.DB_PASSWORD }}
        ports:
          - ${{ vars.DB_PORT }}:5430

              
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        compose-file: "./docker-compose.yml"

    - name: Start Databases
      run: |
        echo ---Building and starting up docker---
        docker-compose -f docker-compose.yml up -d
        echo ---Containers up---

    - name: Install Dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint

    - name: Check Formatting
      run: npm run format-check

    - name: Check Ts errors
      run: npm run typecheck

    - name: Run routes tests
      run: npm run test
      env:
        NODE_ENV : production
        APP_KEY : ${{ secrets.APP_KEY }}
        HOST : ${{ vars.HOST }}
        LOG_LEVEL : info
        CACHE_VIEWS : false
        DB_HOST : ${{ vars.DB_HOST }}
        DB_PORT : ${{ vars.DB_PORT }}
        DB_USER : ${{ vars.DB_USER }}
        DB_DATABASE : ${{ vars.DB_DATABASE }}
        SESSION_DRIVER : cookie
        TZ : UTC
        SPOTIFY_CLIENT_ID : ${{ vars.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET :  ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        BASE_API_URL :  ${{ vars.BASE_API_URL }}
